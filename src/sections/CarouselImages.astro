---
import type { CarouselData } from "@/config/landing.interface"

const { data } = Astro.props
---

<section class="mt-10 overflow-hidden px-2 pb-48 pt-16 sm:pb-56 sm:pt-20 md:pb-28 md:pt-48">
	<div class="container">
		<div id="carousel" class="carousel">
			<input type="radio" name="slides" checked="checked" id="slide-1" />
			<input type="radio" name="slides" id="slide-2" />
			<input type="radio" name="slides" id="slide-3" />
			<input type="radio" name="slides" id="slide-4" />
			<input type="radio" name="slides" id="slide-5" />
			<input type="radio" name="slides" id="slide-6" />
			<input type="radio" name="slides" id="slide-7" />
			<input type="radio" name="slides" id="slide-8" />
			<ul class="carousel__slides">
				{
					data.slides.map((item: CarouselData) => (
						<li class="carousel__slide">
							<figure>
								<div>
									<img width="auto" height="450" src={item.image} alt={item.description} />
								</div>
							</figure>
						</li>
					))
				}
			</ul>
			<ul class="carousel__thumbnails invisible md:visible">
				{
					data.slides.map((item: CarouselData) => (
						<li>
							<label for={item.title}>
								<img width="800" height="450" src={item.image} alt={item.description} />
							</label>
						</li>
					))
				}
			</ul>
		</div>
	</div>
</section>

<script is:inline>
	import { getEventsData } from "@/services/data.service"

	const eventData = await getEventsData()
	// We prevent the page from moving when clicking on the thumbnails.
	document.addEventListener("DOMContentLoaded", () => {
		const labels = document.querySelectorAll(".carousel__thumbnails label")
		const inputs = document.querySelectorAll('.carousel input[type="radio"]')

		labels.forEach((label, index) => {
			label.addEventListener("click", (event) => {
				event.preventDefault()
				inputs[index].checked = true
			})
		})
	})

	document.addEventListener("DOMContentLoaded", async () => {
		const data = JSON.stringify(eventData)
		const carousel = document.querySelector("#carousel")
		data.forEach((item, index) => {
			const img = document.createElement("img")
			img.src = item.image
			img.classList.add("carousel-image")
			if (index === 0) {
				img.classList.add("active") // Agrega la clase 'active' a la primera imagen
			}
			carousel.appendChild(img)
		})

		const images = document.querySelectorAll("#carousel .carousel-image")
		let currentIndex = 0

		function changeImage() {
			// Remove the 'active' class from the current image
			images[currentIndex].classList.remove("active")
			// Update the index to point to the next image, wrapping around if necessary
			currentIndex = (currentIndex + 1) % images.length
			// Add the 'active' class to the new current image
			images[currentIndex].classList.add("active")
		}

		// Change the image every 5 seconds
		setInterval(changeImage, 5000)
	})
</script>

<style>
	@mixin aspect-ratio($width, $height) {
		position: relative;

		&:before {
			display: block;
			content: "";
			width: 100%;
			padding-top: ($height / $width) * 100%;
		}

		> img {
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			width: 100%;
			height: 100%;
		}
	}

	section {
		padding: 50px 0;
	}
	#carousel .carousel-image {
		display: none;
	}

	#carousel .carousel-image.active {
		display: block;
	}
	.container {
		max-width: 90%;
		margin: 0 auto;
		padding: 0 20px;
	}

	.carousel {
		display: block;
		text-align: left;
		position: relative;
		margin-bottom: 22px;

		> input {
			clip: rect(1px, 1px, 1px, 1px);
			clip-path: inset(50%);
			height: 1px;
			width: 1px;
			margin: -1px;
			overflow: hidden;
			padding: 0;
			position: absolute;

			&:nth-of-type(8):checked ~ .carousel__slides .carousel__slide:first-of-type {
				margin-left: -700%;
			}
			&:nth-of-type(7):checked ~ .carousel__slides .carousel__slide:first-of-type {
				margin-left: -600%;
			}
			&:nth-of-type(6):checked ~ .carousel__slides .carousel__slide:first-of-type {
				margin-left: -500%;
			}
			&:nth-of-type(5):checked ~ .carousel__slides .carousel__slide:first-of-type {
				margin-left: -400%;
			}
			&:nth-of-type(4):checked ~ .carousel__slides .carousel__slide:first-of-type {
				margin-left: -300%;
			}
			&:nth-of-type(3):checked ~ .carousel__slides .carousel__slide:first-of-type {
				margin-left: -200%;
			}
			&:nth-of-type(2):checked ~ .carousel__slides .carousel__slide:first-of-type {
				margin-left: -100%;
			}
			&:nth-of-type(1):checked ~ .carousel__slides .carousel__slide:first-of-type {
				margin-left: 0%;
			}

			&:nth-of-type(1):checked ~ .carousel__thumbnails li:nth-of-type(1) {
				box-shadow: 0 0 0 2px rgb(255, 255, 255);
			}
			&:nth-of-type(2):checked ~ .carousel__thumbnails li:nth-of-type(2) {
				box-shadow: 0 0 0 2px rgb(229, 229, 229);
			}
			&:nth-of-type(3):checked ~ .carousel__thumbnails li:nth-of-type(3) {
				box-shadow: 0 0 0 2px rgb(229, 229, 229);
			}
			&:nth-of-type(4):checked ~ .carousel__thumbnails li:nth-of-type(4) {
				box-shadow: 0 0 0 2px rgb(229, 229, 229);
			}
			&:nth-of-type(5):checked ~ .carousel__thumbnails li:nth-of-type(5) {
				box-shadow: 0 0 0 2px rgb(229, 229, 229);
			}
			&:nth-of-type(6):checked ~ .carousel__thumbnails li:nth-of-type(6) {
				box-shadow: 0 0 0 2px rgb(229, 229, 229);
			}
			&:nth-of-type(7):checked ~ .carousel__thumbnails li:nth-of-type(7) {
				box-shadow: 0 0 0 2px rgb(229, 229, 229);
			}
			&:nth-of-type(8):checked ~ .carousel__thumbnails li:nth-of-type(8) {
				box-shadow: 0 0 0 2px rgb(229, 229, 229);
			}
		}
	}

	.carousel__slides {
		position: relative;
		z-index: 1;
		padding: 0;
		margin: 0;
		overflow: hidden;
		white-space: nowrap;
		box-sizing: border-box;
		display: flex;
	}

	.carousel__slide {
		position: relative;
		display: block;
		flex: 1 0 100%;
		width: 100%;
		height: 100%;
		overflow: hidden;
		transition: all 300ms ease-out;
		vertical-align: top;
		box-sizing: border-box;
		white-space: normal;

		figure {
			display: flex;
			margin: 0;
		}

		div {
			@include aspect-ratio(3, 2);
			width: 100%;
		}

		img {
			display: block;
			flex: 1 1 auto;
			object-fit: cover;
		}

		figcaption {
			align-self: flex-end;
			padding: 20px 20px 0 20px;
			flex: 0 0 auto;
			width: 25%;
			min-width: 150px;
		}

		.credit {
			margin-top: 1rem;
			color: rgba(0, 0, 0, 0.5);
			display: block;
		}

		&.scrollable {
			overflow-y: scroll;
		}
	}

	.carousel__thumbnails {
		list-style: none;
		padding: 0;
		margin: 0;
		display: flex;

		margin: 0 -10px;

		.carousel__slides + & {
			margin-top: 20px;
		}

		li {
			flex: 1 1 auto;
			max-width: calc((100% / 6) - 20px);
			margin: 0 10px;
			transition: all 300ms ease-in-out;
		}

		label {
			display: block;
			@include aspect-ratio(1, 1);

			&:hover,
			&:focus {
				cursor: pointer;

				img {
					box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.25);
					transition: all 300ms ease-in-out;
				}
			}
		}

		img {
			display: block;
			width: 100%;
			height: 100%;
			object-fit: cover;
		}
	}
</style>
